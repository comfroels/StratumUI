// Cards
$card-count: 0;

// Generate card sizes based on containers
@each $breakpoint in map-values($breakpoints) {

  $card-count: $card-count + 1; // Count through card widths as we loop
  $gutter-and-padding: $gutter * 2; // Compensate for gutter and padding
  $card-width: ($breakpoint - $gutter-and-padding) / $card-count;
  $card-size: $card-width - 1;  // Compensate for border
  $card-double: $card-width * 2;

  @media (min-width: #{$breakpoint} ) {
    .card-count {opacity: $card-count;}
    .card {
      @include square($card-size);
      &--image {
        width: $card-size;
      }
      &--bar {
        width: $card-size;
      }
      &.double.horizontal {
        width: $card-double - 2;
      }
    }
    // Double cards; horizontal or vertical
    .double {
      &.vertical {
        height: $card-double - 2;
        // if .right is applied, compensate for overall
        // card-shift of pixels based on card-count
        &.right {
          margin-right: #{$card-count}px;
        }
      }
      &.horizontal {
        width: $card-double - 2;
      }
    }
  }
}

.card {
  background: $card--background-color;
  @include border(right);
  @include border(bottom);
  display: inline-block;
  float: left;
  @extend %scrollbar;
  @include transition(all, 0.1s);
  &--title {
    @include font-size($font--headline-size);
    font-weight: $font--headline-weight;
    padding: $padding;
    @include transition(all, 0.1s);
  }
  &--body {
    display: inline-block;
    height: 80%; // TODO: More reliable way determine height
    padding: $padding;
    padding-left: $padding * 1.7;
    margin-right: .2em; // Margin in place for scrollbar
    overflow-y: auto;
    overflow-x: hidden;
    position: relative;
    h2 {
      font-family: $font--family;
      font-weight: $font--headline-weight;
      @include font-size(18px);
      margin-top: 0;
      margin-bottom: .4em;
    }
  }
  &--image {
    display: block;
    height: 150px;
    margin-left: -1.2em;
    margin-right: -.9em;
    position: relative;
    overflow: hidden;
    @include transition(all, 0.1s);
    img {
      @extend %vertical-align;
      width: 100%;
    }
  }
  &--bar {
    background-color: $card--background-color;
    bottom: 0;
    font-size: 80%;
    opacity: 0;
    padding: $padding;
    position: absolute;
    text-transform: uppercase;
    z-index: 100;
    @include transition(all, 0.3s);
    @include text-shadow(0px,1px,1px,darken($link-active,5%));
  }
  &.vertical {
    .card--body {
      min-height: 90%; // TODO: More reliable way determine height
      }
    }
  &:hover {
    background: $card--foreground-color;
    @include box-shadow(0px,0px,5px,$grey-light);
    @include border(right,$grey-light);
    @include border(bottom, $grey-light);
    @include transform-scale(1.05);
    @include transition(transform,background, .3s);
    position: relative;
    z-index: 200;
    .card--title {
      background: $grey-header;
    }
    .card--bar {
      background-color: lighten($link-active,15%);
      @include box-shadow(0px,0px,5px,$grey-light);
      @include border(bottom, $link-active);
      @include border(right, lighten($link-active,10%));
      bottom: -37px;
      color: white;
      opacity: 1;
      text-align: right;
      &:hover {
        background-color: $link-active;
        cursor: pointer;
      }
    }
  }
}
